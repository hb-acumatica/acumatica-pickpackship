<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeletePrintJobNotify" xml:space="preserve">
    <value>Deleting job {0} from queue...</value>
  </data>
  <data name="DeviceMissingPrompt" xml:space="preserve">
    <value>Please select the device to link to Acumatica for scale ID {0}.</value>
  </data>
  <data name="EmptyQueueNotify" xml:space="preserve">
    <value>Queue is empty.</value>
  </data>
  <data name="FileIdMissingWarning" xml:space="preserve">
    <value>Queue {0} - print job {1} has no 'FILEID' parameter configured. The print job will be discarded.</value>
  </data>
  <data name="InvalidScaleWeightUnit" xml:space="preserve">
    <value>Invalid scale weight unit code: {0}.</value>
  </data>
  <data name="LoginMissingPrompt" xml:space="preserve">
    <value>Please enter your login.</value>
  </data>
  <data name="LoginNotify" xml:space="preserve">
    <value>Logging in to {0}...</value>
  </data>
  <data name="LogoutNotify" xml:space="preserve">
    <value>Logging out...</value>
  </data>
  <data name="MinimizedToNotificationAreaWarning" xml:space="preserve">
    <value>The application is still running and monitoring your devices. To access it, click the icon in the tray.</value>
  </data>
  <data name="PaperSizeMissingWarning" xml:space="preserve">
    <value>Paper Size {0} not found for printer {1}. Please verify configuration.</value>
  </data>
  <data name="PaperSourceMissingWarning" xml:space="preserve">
    <value>Paper Source {0} not found for printer {1}. Please verify configuration.</value>
  </data>
  <data name="PasswordMissingPrompt" xml:space="preserve">
    <value>Please enter your password.</value>
  </data>
  <data name="PdfWrongFileFormatWarning" xml:space="preserve">
    <value>Queue {0} - print job {1} contains a file which doesn't look like a valid PDF file...</value>
  </data>
  <data name="PdfWrongModeWarning" xml:space="preserve">
    <value>Queue {0} - print job {1} contains a PDF file that can't be sent in raw mode...</value>
  </data>
  <data name="PollingQueueUnknownError" xml:space="preserve">
    <value>An error occured while polling the print queue: {0}</value>
  </data>
  <data name="PrintJobStartPollingNotify" xml:space="preserve">
    <value>Polling for new print jobs...</value>
  </data>
  <data name="PrintPdfNotify" xml:space="preserve">
    <value>Queue {0} - printing PDF to {1}...</value>
  </data>
  <data name="PrintQueueConfigurationMissingWarning" xml:space="preserve">
    <value>Print Queue {0} is not configured on this Acumatica instance. Please check configuration.</value>
  </data>
  <data name="PrintQueueInitializeNotify" xml:space="preserve">
    <value>Initializing print queues...</value>
  </data>
  <data name="PrintQueueInitializeSuccessNotify" xml:space="preserve">
    <value>Print Queue {0} initialized.</value>
  </data>
  <data name="PrintQueueOrScaleConfigurationMissingPrompt" xml:space="preserve">
    <value>Please configure at least one print queue or scale to monitor.</value>
  </data>
  <data name="PrintQueuesConfigurationMissingWarning" xml:space="preserve">
    <value>No print queues have been configured.</value>
  </data>
  <data name="PrintRawDataNotify" xml:space="preserve">
    <value>Queue {0} - printing raw data to {1}...</value>
  </data>
  <data name="ProcessPrintJobNotify" xml:space="preserve">
    <value>Queue {0} - processing print job {1}...</value>
  </data>
  <data name="ProcessPrintJobsNotify" xml:space="preserve">
    <value>Processing print jobs in queue...</value>
  </data>
  <data name="QueueNameMissingPrompt" xml:space="preserve">
    <value>Please give a name to this queue.</value>
  </data>
  <data name="ScaleCalibrationError" xml:space="preserve">
    <value>Scale requires calibration.</value>
  </data>
  <data name="ScaleConfigurationMissingWarning" xml:space="preserve">
    <value>No scale configured.</value>
  </data>
  <data name="ScaleConnectionError" xml:space="preserve">
    <value>Failed to connect to scale.</value>
  </data>
  <data name="ScaleOverweightError" xml:space="preserve">
    <value>Weight exceeds scale capacity.</value>
  </data>
  <data name="ScaleWeightError" xml:space="preserve">
    <value>An error occured while updating the scale weight: {0}</value>
  </data>
  <data name="ScaleWeightNotify" xml:space="preserve">
    <value>Scale weight: {0} {1}</value>
  </data>
  <data name="ScreenWebServiceConnexionError" xml:space="preserve">
    <value>Error connecting to Acumatica: {0}</value>
  </data>
  <data name="StartMonitoringNotify" xml:space="preserve">
    <value>Starting monitoring tasks...</value>
  </data>
  <data name="StartMonitoringSuccessNotify" xml:space="preserve">
    <value>{0} started successfully.</value>
  </data>
  <data name="StopMonitoringNotify" xml:space="preserve">
    <value>Stopping monitoring tasks...</value>
  </data>
  <data name="StopMonitoringSuccessNotify" xml:space="preserve">
    <value>All the monitoring tasks have been stopped.</value>
  </data>
  <data name="UnknownDeviceDescription" xml:space="preserve">
    <value>Unknown Device (VendorId=0x{0:X}, ProductId=0x{1:X})</value>
  </data>
  <data name="UpdateScaleWeightNotify" xml:space="preserve">
    <value>Updating weight for scale ID {0}...</value>
  </data>
  <data name="UpdateScaleWeightSuccessNotify" xml:space="preserve">
    <value>Weight for scale ID {0} was updated.</value>
  </data>
  <data name="UrlMissingPrompt" xml:space="preserve">
    <value>Please enter a valid URL.</value>
  </data>
  <data name="WebServiceReportReturnValueMissingWarning" xml:space="preserve">
    <value>Nothing returned by webservice for report {0}</value>
  </data>
</root>